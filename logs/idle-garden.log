* 000000 [Engine] Log started at 2024/7/24 13:24:2
* 000000 [Engine] DragonRuby Game Toolkit
* 000000 [Engine]   Version: 5.32
* 000000 [Engine]   Tier: Standard
* 000000 [Engine]   GIT Hash: f486d450871d07ac957f6c7264bc6fb997cfba4a
* 000000 [Engine]   Build Date: Jul 14 2024 04:05:47
* 000000 [Engine] Platform: Mac OS X
* 000000 [Engine] 
* 000000 [Engine] *******************************************************************************************
* 000000 [Engine] *** This is the Standard license build!                                                 ***
* 000000 [Engine] *** Get more with an Indie or Pro license such as C extensions, mobile dev, and VR dev! ***
* 000000 [Engine] *** Details at http://dragonruby.org/toolkit/game#purchase                              ***
* 000000 [Engine] *******************************************************************************************
* 000000 [Engine] 
- 000000 [Engine] Process Working Directory: /Users/justinlamb/repos/Idle-Garden/
- 000000 [Engine] Game Dir: /Users/justinlamb/repos/Idle-Garden//mygame
- 000000 [Engine] Game ID: idle-garden
- 000000 [Engine] Game Title: Idle Garden
- 000000 [Engine] Game Version: 0.10
- 000000 [Engine] Game Package ID: org.jalamb5.idle-garden
- 000000 [Engine] Game Developer ID: jalamb5
- 000000 [Engine] Game Developer Title: Justin Lamb
- 000000 [Engine] Production Build: no
- 000000 [Engine] Remote Hotload: no
? 000000 [Engine] Loading cvars from file 'metadata/cvars.txt' ...
? 000000 [Engine] File 'metadata/cvars.txt' line 1 setting cvar 'log.filter_subsystems' to 'HTTPServer'
? 000000 [Engine] File 'metadata/cvars.txt' complete
- 000000 [Render] SDL video backend: cocoa
- 000000 [Render] SDL renderer backend: metal
- 000000 [Render] Window size: 1280x720 (requested 1280x720)
- 000000 [Render] Fullscreen Desktop mode: no
- 000000 [Render] HD: no
- 000000 [Render] HighDPI: no
- 000000 [Render] Max texture size: 16384x16384 (system reported 16384x16384)
- 000000 [Render] Logical render size: 1280x720
- 000000 [Render] Native render size: 1280x720
? 000000 [Engine] RNG seed has been set to 1721852642.
- 000000 [Engine] Janitor is using 4 threads.
? 000285 [Engine] Reloaded app/game.rb. (17067)
- 000306 [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/game.rb.
line 45:82: syntax error, unexpected ')', expecting '}'



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (18320)
? 000309 [Engine] Reloaded app/game.rb. (18500)
? 000355 [Engine] Reloaded app/game.rb. (21257)
? 000432 [Engine] Reloaded app/game.rb. (25877)
- 000436 [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/game.rb.
line 45:82: syntax error, unexpected ')', expecting '}'



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (26117)
? 000440 [Engine] Reloaded app/game.rb. (26357)
? 000451 [Engine] Reloaded app/game.rb. (27035)
- 000453 [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/game.rb.
line 45:86: syntax error, unexpected ','



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (27135)
? 000454 [Engine] Reloaded app/game.rb. (27195)
? 000457 [Engine] Reloaded app/game.rb. (27368)
? 000466 [Engine] Reloaded app/game.rb. (27908)
? 000483 [Engine] Reloaded app/game.rb. (28928)
? 000491 [Engine] Reloaded app/game.rb. (29408)
? 000537 [Engine] Reloaded app/button.rb. (32168)
? 000556 [Engine] Reloaded app/button.rb. (33308)
- 000575 [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/game.rb.
line 47:4: syntax error, unexpected '\n'



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (34448)
? 000576 [Engine] Reloaded app/game.rb. (34508)
? 000579 [Engine] Reloaded app/game.rb. (34693)
? 000616 [Engine] Reloaded app/button.rb. (36913)
? 000623 [Engine] Reloaded app/button.rb. (37333)
? 000630 [Engine] Reloaded app/button.rb. (37753)
? 000635 [Engine] Reloaded app/button.rb. (38053)
? 000640 [Engine] Reloaded app/button.rb. (38353)
? 000647 [Engine] Reloaded app/button.rb. (38773)
? 000656 [Engine] Reloaded app/button.rb. (39313)
? 000666 [Engine] Reloaded app/button.rb. (39913)
? 000675 [Engine] Reloaded app/button.rb. (40453)
? 000683 [Engine] Reloaded app/button.rb. (40933)
? 000734 [Engine] Reloaded app/button.rb. (43993)
? 000741 [Engine] Reloaded app/button.rb. (44413)
? 000746 [Engine] Reloaded app/button.rb. (44713)
? 000793 [Engine] Reloaded app/button.rb. (47533)
? 000835 [Engine] Reloaded app/button.rb. (50053)
? 000841 [Engine] Reloaded app/button.rb. (50413)
? 000848 [Engine] Reloaded app/button.rb. (50833)
? 000862 [Engine] Reloaded app/button.rb. (51673)
? 000883 [Engine] Reloaded app/game.rb. (52933)
? 000887 [Engine] Reloaded app/game.rb. (53173)
? 000891 [Engine] Reloaded app/game.rb. (53413)
? 000895 [Engine] Reloaded app/game.rb. (53653)
? 000914 [Engine] Reloaded app/button.rb. (54793)
? 000928 [Engine] Reloaded app/button.rb. (55633)
? 000938 [Engine] Reloaded app/button.rb. (56233)
* 000947 [Engine] Logging shutting down
